package edu.uth.wed_san_pham_cham_soc_da.data;

import org.springframework.core.annotation.Order;
import edu.uth.wed_san_pham_cham_soc_da.models.Category;
import edu.uth.wed_san_pham_cham_soc_da.models.SubCategory;
import edu.uth.wed_san_pham_cham_soc_da.repository.CategoryRepository;
import edu.uth.wed_san_pham_cham_soc_da.repository.SubCategoryRepository;
import org.springframework.boot.CommandLineRunner;
import org.springframework.stereotype.Component;
import java.util.Optional;

@Order(5)
@Component
public class DataSubCategory implements CommandLineRunner {
    private final CategoryRepository categoryRepository;
    private final SubCategoryRepository subCategoryRepository;

    public DataSubCategory(CategoryRepository categoryRepository, SubCategoryRepository subCategoryRepository) {
        this.categoryRepository = categoryRepository;
        this.subCategoryRepository = subCategoryRepository;
    }

    @Override
    public void run(String... args) {
        System.out.println("üöÄ Running CommandLineRunner...");

        // T√¨m Category
        Optional<Category> skincareOpt = categoryRepository.findById(1);
        Optional<Category> bodycareOpt = categoryRepository.findById(2);
        Optional<Category> otherproductsOpt = categoryRepository.findById(3);

        if (skincareOpt.isPresent() && bodycareOpt.isPresent()) {
            Category skincare = skincareOpt.get();
            Category bodycare = bodycareOpt.get();
            Category otherproducts = otherproductsOpt.get();

            // Ki·ªÉm tra xem SubCategory ƒë√£ t·ªìn t·∫°i ch∆∞a
            if (subCategoryRepository.count() == 0) {
                subCategoryRepository.save(new SubCategory("S·ªØa r·ª≠a m·∫∑t", skincare));
                subCategoryRepository.save(new SubCategory("Serum", skincare));
                subCategoryRepository.save(new SubCategory("Kem d∆∞·ª°ng ·∫©m", skincare));
                subCategoryRepository.save(new SubCategory("Kem ch·ªëng n·∫Øng", skincare));

                subCategoryRepository.save(new SubCategory("S·ªØa t·∫Øm d∆∞·ª°ng ·∫©m", bodycare));
                subCategoryRepository.save(new SubCategory("T·∫©y t·∫ø b√†o ch·∫øt body", bodycare));
                subCategoryRepository.save(new SubCategory("Tinh d·∫ßu th∆∞ gi√£n", bodycare));
                subCategoryRepository.save(new SubCategory("D∆∞·ª°ng th·ªÉ tr·∫Øng da", bodycare));

                subCategoryRepository.save(new SubCategory("M·∫∑t n·∫°", otherproducts));
                subCategoryRepository.save(new SubCategory("T·∫©y trang", otherproducts));
                subCategoryRepository.save(new SubCategory("D·ª•ng c·ª• chƒÉm s√≥c da", otherproducts));
                subCategoryRepository.save(new SubCategory("Th·ª±c ph·∫©m ch·ª©c nƒÉng", otherproducts));


                System.out.println("‚úÖ D·ªØ li·ªáu ƒë√£ ƒë∆∞·ª£c ch√®n v√†o b·∫£ng SubCategory.");
            } else {
                System.out.println("‚ö†Ô∏è D·ªØ li·ªáu SubCategory ƒë√£ t·ªìn t·∫°i, kh√¥ng c·∫ßn ch√®n th√™m.");
            }
        } else {
            System.out.println("‚ùå Kh√¥ng t√¨m th·∫•y Category ph√π h·ª£p, kh√¥ng th·ªÉ th√™m SubCategory.");
        }
    }
}
